<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCadPrd.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>